// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App/> renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                  "marginTop": 0,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "lightgrey",
                              "flex": 1,
                              "flexDirection": "column",
                            },
                            Object {
                              "paddingBottom": 0,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 2,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <Image
                            source={1}
                            style={
                              Array [
                                Object {
                                  "height": 280,
                                  "width": 280,
                                },
                              ]
                            }
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "flex": 1,
                              "justifyContent": "center",
                              "paddingHorizontal": 80,
                            }
                          }
                        >
                          <TextInput
                            autoCapitalize="none"
                            autoCorrect={false}
                            keyboardType="email-address"
                            onChangeText={[Function]}
                            placeholder="Email"
                            spellCheck={false}
                            style={
                              Object {
                                "backgroundColor": "white",
                                "borderRadius": 10,
                                "marginTop": 5,
                                "paddingHorizontal": 15,
                                "paddingVertical": 10,
                              }
                            }
                            value=""
                          />
                          <TextInput
                            autoCapitalize="none"
                            autoCorrect={false}
                            onChangeText={[Function]}
                            placeholder="Password"
                            secureTextEntry={true}
                            spellCheck={false}
                            style={
                              Object {
                                "backgroundColor": "white",
                                "borderRadius": 10,
                                "marginTop": 5,
                                "paddingHorizontal": 15,
                                "paddingVertical": 10,
                              }
                            }
                            value=""
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                              "marginTop": 40,
                              "paddingHorizontal": 80,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "black",
                                "borderRadius": 10,
                                "opacity": 1,
                                "padding": 15,
                                "width": "100%",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 16,
                                  "fontWeight": "700",
                                }
                              }
                            >
                              Login
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "white",
                                "borderColor": "black",
                                "borderRadius": 10,
                                "borderWidth": 1,
                                "marginTop": 5,
                                "opacity": 1,
                                "padding": 15,
                                "width": "100%",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "black",
                                  "fontSize": 16,
                                  "fontWeight": "700",
                                }
                              }
                            >
                              Register
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
